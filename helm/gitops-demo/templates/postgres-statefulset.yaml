{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gitops-demo.fullname" . }}-postgres
  labels:
    {{- include "gitops-demo.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  serviceName: {{ include "gitops-demo.fullname" . }}-postgres
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "gitops-demo.fullname" . }}-postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "gitops-demo.fullname" . }}-postgres
        app.kubernetes.io/component: database
    spec:
      securityContext:
        fsGroup: 999
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - name: tcp
              containerPort: 5432
              protocol: TCP
          env:
            {{- $dbSecret := .Values.backend.database.existingSecret | default .Values.backend.database.secretName }}
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ $dbSecret }}
                  key: PGDATABASE
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ $dbSecret }}
                  key: PGUSER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $dbSecret }}
                  key: PGPASSWORD
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
      {{- with .Values.postgres.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.postgres.storage.size }}
        {{- if .Values.postgres.storage.className }}
        storageClassName: {{ .Values.postgres.storage.className }}
        {{- end }}
{{- end }}
